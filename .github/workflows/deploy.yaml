name: Deploy Site on WordPress Post Update
# Ejecuta el workflow cuando se dispare un evento repository_dispatch.
on:
  workflow_dispatch:  # También puedes correrlo manualmente
  repository_dispatch:
    types: [new_post, update_post]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Chequear el código del repositorio.
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Instalar las dependencias del proyecto (en caso de usar npm).
    - name: Install dependencies
      run: npm ci

    # 3. Ejecutar el build del proyecto Astro.
    - name: Build site
      run: npm run build

    - name: Commit and push build output
      run: |
        git config --global user.name "asisjuri"
        git config --global user.email "abogados@asisjuri.com"
        git add .
        git commit -m "Deploy build output"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Deploy dist folder to cPanel Git repository
    #   run: |
    #     git config --global user.name "github-actions[bot]"
    #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
    #     cd dist
    #     git init
    #     git remote add web  # Reemplaza con la URL de tu repositorio en cPanel
    #     git add .
    #     git commit -m "Deploying site to cPanel"
    #     git push -f cpanel main

    # 4. Desplegar los archivos generados al servidor usando FTP.
    # - name: Deploy via FTP
    #   uses: SamKirkland/FTP-Deploy-Action@4.3.0
    #   with:
    #     server: ${{ secrets.FTP_SERVER }}
    #     username: ${{ secrets.FTP_USERNAME }}
    #     password: ${{ secrets.FTP_PASSWORD }}
    #     protocol: ftps
    #     local-dir: ./dist/ # El directorio generado después del build de Astro
    #     server-dir: /public_html/  # La carpeta donde se va a desplegar en cPanel
    #     debug: true
